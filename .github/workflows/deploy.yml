name: Deploy to Cloudflare

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages and Workers
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.7.1

      - name: Install Dependencies
        run: pnpm install

      - name: Build Frontend
        run: pnpm run build
        env:
          CI: false

      - name: Install Wrangler
        run: pnpm add -g wrangler

      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "Creating deployment..."
          
          # Create manifest.json
          cd build
          echo "{" > manifest.json
          echo "  \"files\": {" >> manifest.json
          first=true
          find . -type f ! -name 'manifest.json' -print0 | while IFS= read -r -d '' file; do
            # Remove leading ./
            file_path="${file#./}"
            # Calculate file hash
            file_hash=$(sha256sum "$file" | cut -d ' ' -f 1)
            if [ "$first" = true ]; then
              first=false
            else
              echo "," >> manifest.json
            fi
            echo "    \"$file_path\": {\"sha256\": \"$file_hash\"}" >> manifest.json
          done
          echo "  }" >> manifest.json
          echo "}" >> manifest.json
          
          # Create a tarball of the build directory
          tar -czf ../build.tar.gz .
          cd ..
          
          # Debugging: Check files
          echo "Checking build.tar.gz:"
          ls -l build.tar.gz
          echo "Checking manifest.json:"
          cat build/manifest.json
          
          # Upload using curl
          RESPONSE=$(curl -s -X POST "https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT_ID}/pages/projects/windsurf/deployments" \
            -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
            -F "file=@build.tar.gz" \
            -F "manifest=@build/manifest.json;type=application/json" \
            -w "\n%{http_code}")
          
          HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
          RESPONSE_BODY=$(echo "$RESPONSE" | head -n-1)
          
          echo "Response body: ${RESPONSE_BODY}"
          echo "HTTP status: ${HTTP_STATUS}"
          
          if [[ "${HTTP_STATUS}" != "200" ]]; then
            echo "Failed to deploy to Pages"
            exit 1
          fi

      - name: Deploy Worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "Deploying Worker..."
          wrangler deploy
